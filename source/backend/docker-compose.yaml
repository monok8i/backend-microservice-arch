version: "3.8"

services:
  backend:
    image: backend-users:latest
    container_name: backend-users
    build:
      context: ./users-service/
      dockerfile: Dockerfile
    develop:
      watch:
        - action: sync
          path: ./users-service/
          target: ./app/
    ports:
      - "80:80"
    restart: always
    depends_on:
      - postgres
      - redis
    networks:
      - backend

  postgres:
    container_name: postgres
    image: postgres:16-alpine
    restart: always
    env_file: ./.env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    expose:
      - "${POSTGRES_PORT}"
    volumes:
      - ./postgres/docker-entrypoint.sh:/docker-entrypoint-initdb.d/docker-entrypoint.sh
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: cache
    restart: always
    env_file: ./.env
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    expose:
      - "${REDIS_PORT}"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - backend

#  nginx:
#    image: nginx:latest
#    container_name: proxy
#    restart: always
#    ports:
#      - "80:80"
#    volumes:
#      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
#    networks:
#      - backend

networks:
  backend:
    name: backend
    driver: bridge
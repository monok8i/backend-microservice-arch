version: "3.8"

services:
  backend:
    image: fastapi:latest
    container_name: backend
    build:
      context: ./backend
      dockerfile: backend.Dockerfile
    ports:
      - "50:50"
    restart: always
    depends_on:
      - postgres
      - redis
    networks:
      - backend

  postgres:
    container_name: postgres
    image: postgres:16-alpine
    restart: always
    env_file: ./.env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    expose:
      - "${POSTGRES_PORT}"
    volumes:
      - ./backend/app/scripts/:/docker-entrypoint-initdb.d
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    env_file: ./.env
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    expose:
      - "${REDIS_PORT}"
    volumes:
      - redis-data:${REDIS_DATA}
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - backend
      - frontend

networks:
  backend:
    name: backend
    driver: bridge
  frontend:
    name: frontend
    driver: bridge

volumes:
  db-data:

  redis-data:

